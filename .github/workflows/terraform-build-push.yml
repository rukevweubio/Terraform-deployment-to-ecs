name: Build AWS Resource with Terraform

on:
  push:
    branches:
      - main

env:
  TF_DIR: ./Terraform
  IMAGE_NAME: my-terraform-image
  IMAGE_TAG: latest
  AWS_REGION: us-east-1

jobs:
  terraform-build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: ${{ env.TF_DIR }}
        run: terraform init

      - name: Terraform Apply
        working-directory: ${{ env.TF_DIR }}
        run: terraform apply -auto-approve -input=false

      - name: Get ECR Repository URL
        id: ecr_output
        working-directory: ${{ env.TF_DIR }}
        run: |
          echo "🔍 Retrieving ECR repository URL..."
          URL=$(terraform output -raw ecr_repo_url 2>/dev/null | tr -d '\r\n ')
          if [ -z "$URL" ]; then
            echo "❌ Failed to get ECR URL. Check if 'ecr_repo_url' is declared in Terraform outputs."
            exit 1
          fi
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "✅ ECR URL: $URL"

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image to ECR
        run: |
          docker build -t ${{ steps.ecr_output.outputs.url }}:${{ env.IMAGE_TAG }} .
          docker push ${{ steps.ecr_output.outputs.url }}:${{ env.IMAGE_TAG }}


  build-and-push-dockerhub:
    runs-on: ubuntu-latest
    needs: terraform-build-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image to Docker Hub
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG